# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.env.local
.env.development
.env.test
.env.production
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# IDE and Editor files
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Project specific
logs/
temp/
data/
output/
generated/
uploads/

# Database files
*.db
*.sqlite
*.sqlite3

# Configuration files with secrets
config/local.py
config/production.py

# Docker
docker-compose.override.yml
.dockerignore

# Application specific
# Credentials and API keys
credentials.json
api_keys.json
tokens.json

# Celery beat schedule files
celerybeat-schedule.*

# Redis dump files
dump.rdb

# Log files
app/logs/

# Temporary files
tmp/
app/temp/

# Generated content
app/generated/

# Media files (if storing locally)
media/
images/

# Backup files
*.bak
*.backup
*.old

# OS generated files

# Windows specific
Desktop.ini
$RECYCLE.BIN/

# Linux specific
.fuse_hidden*

# Development and testing
test_results/
test_data/

# Jupyter Notebook

# Local development
local/
local_*
dev_*

# Docker volumes data (if mapped locally)
postgres_data/
redis_data/
volume_data/

# SSL certificates
*.pem
*.key
*.crt
*.p12

# Monitoring and profiling
.prof
profile_*

# Social Media API responses (cache)
api_cache/
response_cache/

# Generated images cache
image_cache/
generated_images/

# Task results cache
task_results/
celery_results/